{"ast":null,"code":"var _jsxFileName = \"/Users/godfather/IdeaProjects/climate_data_visualization_project/climate_data_visualization_project/frontend/src/js/App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport \"../css/styles.css\";\nimport { motion, useScroll, useSpring, useTransform } from 'framer-motion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Parallax(value, distance) {\n  _s();\n  return useTransform(value, [0, 1], [-distance, distance]);\n}\n_s(Parallax, \"qXJXoNhB4Q97FzV6bHSnSFJpnfA=\", false, function () {\n  return [useTransform];\n});\n_c = Parallax;\nfunction Charts({\n  id\n}) {\n  _s2();\n  var _iframes, _iframes2, _iframes3, _iframes4;\n  const [iframes, setIframes] = useState([]);\n  const ref = useRef(null);\n  const {\n    scrollYProgress\n  } = useScroll({\n    target: ref\n  });\n  const y = Parallax(scrollYProgress, 300);\n  const titles = [\"BS chart 1\", \"BS chart 2\"];\n  const texts = [\"A lot of work for a non-UI/UX student\", \"Like seriously\"];\n\n  // Fetch the iframe data when the component mounts\n  useEffect(() => {\n    fetch(\"../assets/dashboards.json\").then(response => response.json()).then(data => {\n      setIframes(data.embeds);\n      console.log(data.embeds);\n    }).catch(error => {\n      console.error(\"Error loading the dashboards json file: \", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(motion.h1, {\n      children: titles[id - 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      children: iframes.length > 0 && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: ((_iframes = iframes[id - 1]) === null || _iframes === void 0 ? void 0 : _iframes.title) || \"Loading...\",\n        width: ((_iframes2 = iframes[id - 1]) === null || _iframes2 === void 0 ? void 0 : _iframes2.width) || \"100%\",\n        height: ((_iframes3 = iframes[id - 1]) === null || _iframes3 === void 0 ? void 0 : _iframes3.height) || \"100%\",\n        src: ((_iframes4 = iframes[id - 1]) === null || _iframes4 === void 0 ? void 0 : _iframes4.src) || \"\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.h2, {\n      style: {\n        y\n      },\n      children: texts[id - 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_s2(Charts, \"l/IkKBkrXAGa2K7XzOxM3J1kgEc=\", false, function () {\n  return [useScroll];\n});\n_c2 = Charts;\nexport default function App() {\n  _s3();\n  const {\n    scrollYProgress\n  } = useScroll();\n  const scaleX = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [[1, 2].map(id => /*#__PURE__*/_jsxDEV(Charts, {\n      id: id\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"progressBar\",\n      style: {\n        scaleX\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s3(App, \"UYAOtHxiUth0DU6Git6zGRnUBB4=\", false, function () {\n  return [useScroll, useSpring];\n});\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Parallax\");\n$RefreshReg$(_c2, \"Charts\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","motion","useScroll","useSpring","useTransform","jsxDEV","_jsxDEV","Fragment","_Fragment","Parallax","value","distance","_s","_c","Charts","id","_s2","_iframes","_iframes2","_iframes3","_iframes4","iframes","setIframes","ref","scrollYProgress","target","y","titles","texts","fetch","then","response","json","data","embeds","console","log","catch","error","children","h1","fileName","_jsxFileName","lineNumber","columnNumber","length","title","width","height","src","allowFullScreen","h2","style","_c2","App","_s3","scaleX","stiffness","damping","restDelta","map","div","className","_c3","$RefreshReg$"],"sources":["/Users/godfather/IdeaProjects/climate_data_visualization_project/climate_data_visualization_project/frontend/src/js/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport \"../css/styles.css\";\nimport { motion, useScroll, useSpring, useTransform, MotionValue } from 'framer-motion';\n\nfunction Parallax(value: MotionValue<number>, distance: number) {\n  return useTransform(value, [0, 1], [-distance, distance]);\n}\n\nfunction Charts({ id }: { id: number }) {\n  const [iframes, setIframes] = useState<Array<any>>([]);\n  const ref = useRef(null);\n  const { scrollYProgress } = useScroll({ target: ref });\n  const y = Parallax(scrollYProgress, 300);\n\n  const titles = [\"BS chart 1\", \"BS chart 2\"];\n  const texts = [\"A lot of work for a non-UI/UX student\", \"Like seriously\"];\n\n  // Fetch the iframe data when the component mounts\n  useEffect(() => {\n    fetch(\"../assets/dashboards.json\")\n        .then(response => response.json())\n        .then(data => {\n          setIframes(data.embeds);\n          console.log(data.embeds);\n        })\n        .catch(error => {\n          console.error(\"Error loading the dashboards json file: \", error);\n        });\n  }, []);\n\n  return (\n      <section>\n        <motion.h1>{titles[id - 1]}</motion.h1>\n        <div ref={ref}>\n          {/* Render iframe only if the data is loaded */}\n          {iframes.length > 0 && (\n              <iframe\n                  title={iframes[id - 1]?.title || \"Loading...\"}\n                  width={iframes[id - 1]?.width || \"100%\"}\n                  height={iframes[id - 1]?.height || \"100%\"}\n                  src={iframes[id - 1]?.src || \"\"}\n                  allowFullScreen={true}>\n              </iframe>\n          )}\n        </div>\n        <motion.h2 style={{ y }}>{texts[id - 1]}</motion.h2>\n      </section>\n  );\n}\n\nexport default function App() {\n  const { scrollYProgress } = useScroll();\n  const scaleX = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  return (\n      <>\n        {[1, 2].map((id) => (\n            <Charts key={id} id={id}/>\n        ))}\n        <motion.div className=\"progressBar\" style={{ scaleX }} />\n      </>\n  );\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,mBAAmB;AAC1B,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,YAAY,QAAqB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExF,SAASC,QAAQA,CAACC,KAA0B,EAAEC,QAAgB,EAAE;EAAAC,EAAA;EAC9D,OAAOR,YAAY,CAACM,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAACC,QAAQ,EAAEA,QAAQ,CAAC,CAAC;AAC3D;AAACC,EAAA,CAFQH,QAAQ;EAAA,QACRL,YAAY;AAAA;AAAAS,EAAA,GADZJ,QAAQ;AAIjB,SAASK,MAAMA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,QAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,SAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAa,EAAE,CAAC;EACtD,MAAMwB,GAAG,GAAGvB,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM;IAAEwB;EAAgB,CAAC,GAAGtB,SAAS,CAAC;IAAEuB,MAAM,EAAEF;EAAI,CAAC,CAAC;EACtD,MAAMG,CAAC,GAAGjB,QAAQ,CAACe,eAAe,EAAE,GAAG,CAAC;EAExC,MAAMG,MAAM,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC;EAC3C,MAAMC,KAAK,GAAG,CAAC,uCAAuC,EAAE,gBAAgB,CAAC;;EAEzE;EACA9B,SAAS,CAAC,MAAM;IACd+B,KAAK,CAAC,2BAA2B,CAAC,CAC7BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZX,UAAU,CAACW,IAAI,CAACC,MAAM,CAAC;MACvBC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACC,MAAM,CAAC;IAC1B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA,CAACL,MAAM,CAACuC,EAAE;MAAAD,QAAA,EAAEZ,MAAM,CAACZ,EAAE,GAAG,CAAC;IAAC;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACvCtC,OAAA;MAAKiB,GAAG,EAAEA,GAAI;MAAAgB,QAAA,EAEXlB,OAAO,CAACwB,MAAM,GAAG,CAAC,iBACfvC,OAAA;QACIwC,KAAK,EAAE,EAAA7B,QAAA,GAAAI,OAAO,CAACN,EAAE,GAAG,CAAC,CAAC,cAAAE,QAAA,uBAAfA,QAAA,CAAiB6B,KAAK,KAAI,YAAa;QAC9CC,KAAK,EAAE,EAAA7B,SAAA,GAAAG,OAAO,CAACN,EAAE,GAAG,CAAC,CAAC,cAAAG,SAAA,uBAAfA,SAAA,CAAiB6B,KAAK,KAAI,MAAO;QACxCC,MAAM,EAAE,EAAA7B,SAAA,GAAAE,OAAO,CAACN,EAAE,GAAG,CAAC,CAAC,cAAAI,SAAA,uBAAfA,SAAA,CAAiB6B,MAAM,KAAI,MAAO;QAC1CC,GAAG,EAAE,EAAA7B,SAAA,GAAAC,OAAO,CAACN,EAAE,GAAG,CAAC,CAAC,cAAAK,SAAA,uBAAfA,SAAA,CAAiB6B,GAAG,KAAI,EAAG;QAChCC,eAAe,EAAE;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IACX;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNtC,OAAA,CAACL,MAAM,CAACkD,EAAE;MAACC,KAAK,EAAE;QAAE1B;MAAE,CAAE;MAAAa,QAAA,EAAEX,KAAK,CAACb,EAAE,GAAG,CAAC;IAAC;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEhB;AAAC5B,GAAA,CAxCQF,MAAM;EAAA,QAGeZ,SAAS;AAAA;AAAAmD,GAAA,GAH9BvC,MAAM;AA0Cf,eAAe,SAASwC,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAM;IAAE/B;EAAgB,CAAC,GAAGtB,SAAS,CAAC,CAAC;EACvC,MAAMsD,MAAM,GAAGrD,SAAS,CAACqB,eAAe,EAAE;IACxCiC,SAAS,EAAE,GAAG;IACdC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,oBACIrD,OAAA,CAAAE,SAAA;IAAA+B,QAAA,GACG,CAAC,CAAC,EAAE,CAAC,CAAC,CAACqB,GAAG,CAAE7C,EAAE,iBACXT,OAAA,CAACQ,MAAM;MAAUC,EAAE,EAAEA;IAAG,GAAXA,EAAE;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAC5B,CAAC,eACFtC,OAAA,CAACL,MAAM,CAAC4D,GAAG;MAACC,SAAS,EAAC,aAAa;MAACV,KAAK,EAAE;QAAEI;MAAO;IAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzD,CAAC;AAET;AAACW,GAAA,CAhBuBD,GAAG;EAAA,QACGpD,SAAS,EACtBC,SAAS;AAAA;AAAA4D,GAAA,GAFFT,GAAG;AAAA,IAAAzC,EAAA,EAAAwC,GAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAnD,EAAA;AAAAmD,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}